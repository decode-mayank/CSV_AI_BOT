version: 0.2
phases:
  pre_build:
    commands:
      - mv .example.env .env
      - sed -i "s/NODEENV/$NODEENV/g" .env
      - sed -i "s/APP_PORT/$APP_PORT/g" .env
      - sed -i "s/APP_PORT/$APP_PORT/g" Dockerfile
      - sed -i "s/DATABASEUSER/$DATABASEUSER/g" .env
      - sed -i "s/DATABASENAME/$DATABASENAME/g" .env
      - sed -i "s/DATABASEHOST/$DATABASEHOST/g" .env
      - sed -i "s/DATABASEPASSWORD/$DATABASEPASSWORD/g" .env
      - sed -i "s/DATABASEPORT/$DATABASEPORT/g" .env
      - sed -i "s/AWSDEFAULTREGION/$AWSDEFAULTREGION/g" .env
      - sed -i "s/DEBUGCSV/$DEBUGCSV/g" .env
      - sed -i "s/DISCORDTOKEN/$DISCORDTOKEN/g" .env
      - sed -i "s/OPENAIAPIKEY/$OPENAIAPIKEY/g" .env
      - sed -i "s/VERBOSE/$VERBOSE/g" .env
      - sed -i "s/SECRETKEY/$SECRETKEY/g" .env
      - mv appspec_$NODEENV.yaml appspec.yaml
      - mv taskdef_$NODEENV.json taskdef.json
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - $(aws ecr get-login --region us-west-2 --no-include-email)
      - REPOSITORY_URI=686878367233.dkr.ecr.us-west-2.amazonaws.com/$ECR_REPO #tobechanged
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-6)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image..
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"RoamMaui-node-staging-ecs","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - 'image*.json'
    - 'appspec.yaml'
    - 'taskdef.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json
